// core/global/enums.hpp -- Enums which are used frequently enough in the code to belong in a gloabl header.

// SPDX-FileType: SOURCE
// SPDX-FileCopyrightText: Copyright 2025 Raine Simmons <gc@gravecat.com>
// SPDX-License-Identifier: GPL-3.0-or-later

#pragma once

#include <cstdint>

namespace gorp {

// Colour enum for passing colours to Terminal, or storing colours for later use.
enum class Colour : uint8_t { NONE, WHITE, GRAY, GRAY_DARK, BLACK, RED_LIGHT, RED, RED_DARK, ORANGE_LIGHT, ORANGE, ORANGE_DARK, YELLOW_LIGHT, YELLOW,
    YELLOW_DARK, GREEN_LIGHT, GREEN, GREEN_DARK, CYAN_LIGHT, CYAN, CYAN_DARK, BLUE_LIGHT, BLUE, BLUE_DARK, PURPLE_LIGHT, PURPLE, PURPLE_DARK, BROWN_LIGHT,
    BROWN, BROWN_DARK };

enum class Font : uint8_t { NORMAL, TRIHOOK, TRIHOOK_HALF };

// The genders of things in the game.
enum class Gender : uint8_t { NONE, MALE, FEMALE, THEY, IT };

// The glyphs used in the codepage 437 font.
enum class Glyph : uint16_t { BLANK = 0, FACE_DARK, FACE_LIGHT, CARD_HEART, CARD_DIAMOND, CARD_CLUB, CARD_SPADE, BIGDOT, BIGDOT_INV, CIRCLE, CIRCLE_INV, MALE,
    FEMALE, MUSIC, MUSIC_DOUBLE, STAR_BIG, TRIANGLE_RIGHT, TRIANGLE_LEFT, ARROW_UD, EXCLAIM_DOUBLE, PILCROW, SECTION, UNDERSCORE_THICK, ARROW_UD_LINE,
    ARROW_UP, ARROW_DOWN, ARROW_RIGHT, ARROW_LEFT, BRACKET, ARROW_LR, TRIANGLE_UP, TRIANGLE_DOWN, HOUSE = 127, C_CEDILLA_CAPS, U_UMLAUT, E_ACUTE, A_CIRCUMFLEX,
    A_DIAERESIS, A_GRAVE, A_OVERRING, C_CEDILLA, E_CIRCUMFLEX, E_DIAERESIS, E_GRAVE, I_DIAERESIS, I_CIRCUMFLEX, I_GRAVE, A_DIAERESIS_CAPS, A_OVERRING_CAPS,
    E_ACUTE_CAPS, ASH, ASH_CAPS, O_CIRCUMFLEX, O_DIAERESIS, O_GRAVE, U_CIRCUMFLEX, U_GRAVE, Y_DIAERESIS, O_DIAERESIS_CAPS, U_DIAERESIS_CAPS, CENT, POUND, YEN,
    PESETA, F_HOOK, A_ACUTE, I_ACUTE, O_ACUTE, U_ACUTE, N_TILDE, N_TILDE_CAPS, ORDINAL_A, ORDINAL_O, UPSIDE_DOWN_QUESTION_MARK, NEGATION_BACKWARDS, NEGATION,
    HALF, QUARTER, UPSIDE_DOWN_EXCLAMATION_MARK, GUILLIMETS_OPEN, GUILLIMETS_CLOSE, LIGHT_SHADE, MEDIUM_SHADE, DARK_SHADE, BOX_LV, BOX_LVL, BOX_VSLD, BOX_VDLS,
    BOX_DDLS, BOX_DSLD, BOX_DVL, BOX_DV, BOX_DDL, BOX_DUL, BOX_UDLS, BOX_USLD, BOX_LDL, BOX_LUR, BOX_LUH, BOX_LDH, BOX_LVR, BOX_LH, BOX_LVH, BOX_VSRD,
    BOX_VDRS, BOX_DUR, BOX_DDR, BOX_DUH, BOX_DDH, BOX_DVR, BOX_DH, BOX_DVH, BOX_USHD, BOX_UDHS, BOX_DSHD, BOX_DDHS, BOX_UDRS, BOX_USRD, BOX_DSRD, BOX_DDRS,
    BOX_VDHS, BOX_VSHD, BOX_LUL, BOX_LDR, FULL_BLOCK, LOWER_HALF_BLOCK, LEFT_HALF_BLOCK, RIGHT_HALF_BLOCK, UPPER_HALF_BLOCK, ALPHA, BETA, GAMMA_CAPS, PI,
    SIGMA_CAPS, SIGMA, MU, TAU, PHI_CAPS, THETA_CAPS, OMEGA_CAPS, DELTA, INFIN, PHI, EPSILON, INTERSECTION, TRIBAR, PLUS_MINUS, GREATER_THAN_EQUAL_TO,
    LESS_THAN_EQUAL_TO, INTEGRAL_TOP, INTEGRAL_BOTTOM, DIVISION, APPROXIMATION, DEGREE, BULLET, INTERPUNCT, SQUARE_ROOT, NASAL_RELEASE, SQUARED, BLACK_SQUARE };

// Keycode defintions, for handling non-standard keys in player input.
enum Key { BACKSPACE = 8, TAB = 9, ENTER = 10, CR = 13, ESCAPE = 27, RESIZE = 256, ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, DELETE_KEY, INSERT, HOME, END,
    PAGE_UP, PAGE_DOWN, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9 };

}   // namespace gorp
